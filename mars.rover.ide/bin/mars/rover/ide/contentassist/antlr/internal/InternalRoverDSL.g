/*
 * generated by Xtext 2.23.0
 */
grammar InternalRoverDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package mars.rover.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package mars.rover.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import mars.rover.services.RoverDSLGrammarAccess;

}
@parser::members {
	private RoverDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(RoverDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMission
entryRuleMission
:
{ before(grammarAccess.getMissionRule()); }
	 ruleMission
{ after(grammarAccess.getMissionRule()); } 
	 EOF 
;

// Rule Mission
ruleMission 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMissionAccess().getGroup()); }
		(rule__Mission__Group__0)
		{ after(grammarAccess.getMissionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColor
entryRuleColor
:
{ before(grammarAccess.getColorRule()); }
	 ruleColor
{ after(grammarAccess.getColorRule()); } 
	 EOF 
;

// Rule Color
ruleColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorAccess().getColorAssignment()); }
		(rule__Color__ColorAssignment)
		{ after(grammarAccess.getColorAccess().getColorAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MissionType
ruleMissionType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionTypeAccess().getAlternatives()); }
		(rule__MissionType__Alternatives)
		{ after(grammarAccess.getMissionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Colors
ruleColors
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorsAccess().getAlternatives()); }
		(rule__Colors__Alternatives)
		{ after(grammarAccess.getColorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Safety
ruleSafety
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyAccess().getAlternatives()); }
		(rule__Safety__Alternatives)
		{ after(grammarAccess.getSafetyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MissionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionTypeAccess().getAvoidColorsEnumLiteralDeclaration_0()); }
		('AvoidColors')
		{ after(grammarAccess.getMissionTypeAccess().getAvoidColorsEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMissionTypeAccess().getFindColorsEnumLiteralDeclaration_1()); }
		('FindColors')
		{ after(grammarAccess.getMissionTypeAccess().getFindColorsEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colors__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorsAccess().getWhiteEnumLiteralDeclaration_0()); }
		('White')
		{ after(grammarAccess.getColorsAccess().getWhiteEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getColorsAccess().getRedEnumLiteralDeclaration_1()); }
		('Red')
		{ after(grammarAccess.getColorsAccess().getRedEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getColorsAccess().getBlueEnumLiteralDeclaration_2()); }
		('Blue')
		{ after(grammarAccess.getColorsAccess().getBlueEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getColorsAccess().getYellowEnumLiteralDeclaration_3()); }
		('Yellow')
		{ after(grammarAccess.getColorsAccess().getYellowEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getColorsAccess().getBlackEnumLiteralDeclaration_4()); }
		('Black')
		{ after(grammarAccess.getColorsAccess().getBlackEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Safety__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSafetyAccess().getOnEnumLiteralDeclaration_0()); }
		('On')
		{ after(grammarAccess.getSafetyAccess().getOnEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSafetyAccess().getOffEnumLiteralDeclaration_1()); }
		('Off')
		{ after(grammarAccess.getSafetyAccess().getOffEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__0__Impl
	rule__Mission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
	'Mission:'
	{ after(grammarAccess.getMissionAccess().getMissionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__1__Impl
	rule__Mission__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getMissiontypeAssignment_1()); }
	(rule__Mission__MissiontypeAssignment_1)
	{ after(grammarAccess.getMissionAccess().getMissiontypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__2__Impl
	rule__Mission__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_2()); }
	(rule__Mission__Group_2__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__3__Impl
	rule__Mission__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_3()); }
	(rule__Mission__Group_3__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__4__Impl
	rule__Mission__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_4()); }
	(rule__Mission__Group_4__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__5__Impl
	rule__Mission__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_5()); }
	(rule__Mission__Group_5__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__6__Impl
	rule__Mission__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_6()); }
	(rule__Mission__Group_6__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__7__Impl
	rule__Mission__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_7()); }
	(rule__Mission__Group_7__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__8__Impl
	rule__Mission__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_8()); }
	(rule__Mission__Group_8__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__9__Impl
	rule__Mission__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_9()); }
	(rule__Mission__Group_9__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__10__Impl
	rule__Mission__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_10()); }
	(rule__Mission__Group_10__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__11__Impl
	rule__Mission__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getEndKeyword_11()); }
	'End:'
	{ after(grammarAccess.getMissionAccess().getEndKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__12__Impl
	rule__Mission__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getTerminationconditionAssignment_12()); }
	(rule__Mission__TerminationconditionAssignment_12)
	{ after(grammarAccess.getMissionAccess().getTerminationconditionAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__13__Impl
	rule__Mission__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_13()); }
	(rule__Mission__Group_13__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getGroup_14()); }
	(rule__Mission__Group_14__0)?
	{ after(grammarAccess.getMissionAccess().getGroup_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_2__0__Impl
	rule__Mission__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getSafetyKeyword_2_0()); }
	'Safety:'
	{ after(grammarAccess.getMissionAccess().getSafetyKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getSafetypropertyAssignment_2_1()); }
	(rule__Mission__SafetypropertyAssignment_2_1)
	{ after(grammarAccess.getMissionAccess().getSafetypropertyAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_3__0__Impl
	rule__Mission__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getLakeColorsKeyword_3_0()); }
	'LakeColors:'
	{ after(grammarAccess.getMissionAccess().getLakeColorsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getLakelistAssignment_3_1()); }
	(rule__Mission__LakelistAssignment_3_1)*
	{ after(grammarAccess.getMissionAccess().getLakelistAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_4__0__Impl
	rule__Mission__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getAvoidObjectsKeyword_4_0()); }
	'AvoidObjects:'
	{ after(grammarAccess.getMissionAccess().getAvoidObjectsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getObjectdistanceAssignment_4_1()); }
	(rule__Mission__ObjectdistanceAssignment_4_1)
	{ after(grammarAccess.getMissionAccess().getObjectdistanceAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_5__0__Impl
	rule__Mission__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getBeginSentenceKeyword_5_0()); }
	'BeginSentence:'
	{ after(grammarAccess.getMissionAccess().getBeginSentenceKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getBeginsentenceAssignment_5_1()); }
	(rule__Mission__BeginsentenceAssignment_5_1)
	{ after(grammarAccess.getMissionAccess().getBeginsentenceAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_6__0__Impl
	rule__Mission__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getOuterBorderKeyword_6_0()); }
	'OuterBorder:'
	{ after(grammarAccess.getMissionAccess().getOuterBorderKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getBordercolorAssignment_6_1()); }
	(rule__Mission__BordercolorAssignment_6_1)
	{ after(grammarAccess.getMissionAccess().getBordercolorAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_7__0__Impl
	rule__Mission__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getForwardSpeedKeyword_7_0()); }
	'ForwardSpeed:'
	{ after(grammarAccess.getMissionAccess().getForwardSpeedKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getForwardspeedAssignment_7_1()); }
	(rule__Mission__ForwardspeedAssignment_7_1)
	{ after(grammarAccess.getMissionAccess().getForwardspeedAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_8__0__Impl
	rule__Mission__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getReverseSpeedKeyword_8_0()); }
	'ReverseSpeed:'
	{ after(grammarAccess.getMissionAccess().getReverseSpeedKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getReversespeedAssignment_8_1()); }
	(rule__Mission__ReversespeedAssignment_8_1)
	{ after(grammarAccess.getMissionAccess().getReversespeedAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_9__0__Impl
	rule__Mission__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getTurnDirectionKeyword_9_0()); }
	'TurnDirection:'
	{ after(grammarAccess.getMissionAccess().getTurnDirectionKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getTurndirectionAssignment_9_1()); }
	(rule__Mission__TurndirectionAssignment_9_1)
	{ after(grammarAccess.getMissionAccess().getTurndirectionAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_10__0__Impl
	rule__Mission__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getColorsKeyword_10_0()); }
	'Colors:'
	{ after(grammarAccess.getMissionAccess().getColorsKeyword_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getColorlistAssignment_10_1()); }
	(rule__Mission__ColorlistAssignment_10_1)*
	{ after(grammarAccess.getMissionAccess().getColorlistAssignment_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_13__0__Impl
	rule__Mission__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getFlashingColorKeyword_13_0()); }
	'FlashingColor:'
	{ after(grammarAccess.getMissionAccess().getFlashingColorKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getFlashingcolorAssignment_13_1()); }
	(rule__Mission__FlashingcolorAssignment_13_1)
	{ after(grammarAccess.getMissionAccess().getFlashingcolorAssignment_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__Group_14__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_14__0__Impl
	rule__Mission__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_14__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getFinalSentenceKeyword_14_0()); }
	'FinalSentence:'
	{ after(grammarAccess.getMissionAccess().getFinalSentenceKeyword_14_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_14__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mission__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__Group_14__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMissionAccess().getFinalsentenceAssignment_14_1()); }
	(rule__Mission__FinalsentenceAssignment_14_1)
	{ after(grammarAccess.getMissionAccess().getFinalsentenceAssignment_14_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mission__MissiontypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getMissiontypeMissionTypeEnumRuleCall_1_0()); }
		ruleMissionType
		{ after(grammarAccess.getMissionAccess().getMissiontypeMissionTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__SafetypropertyAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getSafetypropertySafetyEnumRuleCall_2_1_0()); }
		ruleSafety
		{ after(grammarAccess.getMissionAccess().getSafetypropertySafetyEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__LakelistAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getLakelistColorsEnumRuleCall_3_1_0()); }
		ruleColors
		{ after(grammarAccess.getMissionAccess().getLakelistColorsEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__ObjectdistanceAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getObjectdistanceINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getMissionAccess().getObjectdistanceINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__BeginsentenceAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getBeginsentenceSTRINGTerminalRuleCall_5_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMissionAccess().getBeginsentenceSTRINGTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__BordercolorAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getBordercolorColorParserRuleCall_6_1_0()); }
		ruleColor
		{ after(grammarAccess.getMissionAccess().getBordercolorColorParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__ForwardspeedAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getForwardspeedINTTerminalRuleCall_7_1_0()); }
		RULE_INT
		{ after(grammarAccess.getMissionAccess().getForwardspeedINTTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__ReversespeedAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getReversespeedINTTerminalRuleCall_8_1_0()); }
		RULE_INT
		{ after(grammarAccess.getMissionAccess().getReversespeedINTTerminalRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__TurndirectionAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getTurndirectionINTTerminalRuleCall_9_1_0()); }
		RULE_INT
		{ after(grammarAccess.getMissionAccess().getTurndirectionINTTerminalRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__ColorlistAssignment_10_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getColorlistColorsEnumRuleCall_10_1_0()); }
		ruleColors
		{ after(grammarAccess.getMissionAccess().getColorlistColorsEnumRuleCall_10_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__TerminationconditionAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getTerminationconditionSTRINGTerminalRuleCall_12_0()); }
		RULE_STRING
		{ after(grammarAccess.getMissionAccess().getTerminationconditionSTRINGTerminalRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__FlashingcolorAssignment_13_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getFlashingcolorColorsEnumRuleCall_13_1_0()); }
		ruleColors
		{ after(grammarAccess.getMissionAccess().getFlashingcolorColorsEnumRuleCall_13_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mission__FinalsentenceAssignment_14_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionAccess().getFinalsentenceSTRINGTerminalRuleCall_14_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMissionAccess().getFinalsentenceSTRINGTerminalRuleCall_14_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Color__ColorAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorAccess().getColorColorsEnumRuleCall_0()); }
		ruleColors
		{ after(grammarAccess.getColorAccess().getColorColorsEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
