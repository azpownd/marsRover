/*
 * generated by Xtext 2.23.0
 */
grammar InternalRoverDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package mars.rover.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package mars.rover.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import mars.rover.services.RoverDSLGrammarAccess;

}

@parser::members {

 	private RoverDSLGrammarAccess grammarAccess;

    public InternalRoverDSLParser(TokenStream input, RoverDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Mission";
   	}

   	@Override
   	protected RoverDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMission
entryRuleMission returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMissionRule()); }
	iv_ruleMission=ruleMission
	{ $current=$iv_ruleMission.current; }
	EOF;

// Rule Mission
ruleMission returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mission:'
		{
			newLeafNode(otherlv_0, grammarAccess.getMissionAccess().getMissionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMissionAccess().getMissiontypeMissionTypeEnumRuleCall_1_0());
				}
				lv_missiontype_1_0=ruleMissionType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMissionRule());
					}
					set(
						$current,
						"missiontype",
						lv_missiontype_1_0,
						"mars.rover.RoverDSL.MissionType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='BeginSentence:'
			{
				newLeafNode(otherlv_2, grammarAccess.getMissionAccess().getBeginSentenceKeyword_2_0());
			}
			(
				(
					lv_beginsentence_3_0=RULE_STRING
					{
						newLeafNode(lv_beginsentence_3_0, grammarAccess.getMissionAccess().getBeginsentenceSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMissionRule());
						}
						setWithLastConsumed(
							$current,
							"beginsentence",
							lv_beginsentence_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_4='OuterBorder:'
			{
				newLeafNode(otherlv_4, grammarAccess.getMissionAccess().getOuterBorderKeyword_3_0());
			}
			(
				(
					lv_border_5_0=RULE_STRING
					{
						newLeafNode(lv_border_5_0, grammarAccess.getMissionAccess().getBorderSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMissionRule());
						}
						setWithLastConsumed(
							$current,
							"border",
							lv_border_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_6='ForwardSpeed:'
			{
				newLeafNode(otherlv_6, grammarAccess.getMissionAccess().getForwardSpeedKeyword_4_0());
			}
			(
				(
					lv_forwardspeed_7_0=RULE_INT
					{
						newLeafNode(lv_forwardspeed_7_0, grammarAccess.getMissionAccess().getForwardspeedINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMissionRule());
						}
						setWithLastConsumed(
							$current,
							"forwardspeed",
							lv_forwardspeed_7_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_8='ReverseSpeed:'
			{
				newLeafNode(otherlv_8, grammarAccess.getMissionAccess().getReverseSpeedKeyword_5_0());
			}
			(
				(
					lv_reversespeed_9_0=RULE_INT
					{
						newLeafNode(lv_reversespeed_9_0, grammarAccess.getMissionAccess().getReversespeedINTTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMissionRule());
						}
						setWithLastConsumed(
							$current,
							"reversespeed",
							lv_reversespeed_9_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_10='TurnDirection:'
			{
				newLeafNode(otherlv_10, grammarAccess.getMissionAccess().getTurnDirectionKeyword_6_0());
			}
			(
				(
					lv_turndirection_11_0=RULE_INT
					{
						newLeafNode(lv_turndirection_11_0, grammarAccess.getMissionAccess().getTurndirectionINTTerminalRuleCall_6_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMissionRule());
						}
						setWithLastConsumed(
							$current,
							"turndirection",
							lv_turndirection_11_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			otherlv_12='Colors:'
			{
				newLeafNode(otherlv_12, grammarAccess.getMissionAccess().getColorsKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMissionAccess().getColorlistColorsParserRuleCall_7_1_0());
					}
					lv_colorlist_13_0=ruleColors
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMissionRule());
						}
						add(
							$current,
							"colorlist",
							lv_colorlist_13_0,
							"mars.rover.RoverDSL.Colors");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_14='Sensors:'
			{
				newLeafNode(otherlv_14, grammarAccess.getMissionAccess().getSensorsKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMissionAccess().getSensorlistSensorsParserRuleCall_8_1_0());
					}
					lv_sensorlist_15_0=ruleSensors
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMissionRule());
						}
						add(
							$current,
							"sensorlist",
							lv_sensorlist_15_0,
							"mars.rover.RoverDSL.Sensors");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_16='End:'
		{
			newLeafNode(otherlv_16, grammarAccess.getMissionAccess().getEndKeyword_9());
		}
		(
			(
				lv_terminationcondition_17_0=RULE_STRING
				{
					newLeafNode(lv_terminationcondition_17_0, grammarAccess.getMissionAccess().getTerminationconditionSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMissionRule());
					}
					setWithLastConsumed(
						$current,
						"terminationcondition",
						lv_terminationcondition_17_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_18='FlashingColor:'
			{
				newLeafNode(otherlv_18, grammarAccess.getMissionAccess().getFlashingColorKeyword_11_0());
			}
			(
				(
					lv_flashingcolor_19_0=RULE_STRING
					{
						newLeafNode(lv_flashingcolor_19_0, grammarAccess.getMissionAccess().getFlashingcolorSTRINGTerminalRuleCall_11_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMissionRule());
						}
						setWithLastConsumed(
							$current,
							"flashingcolor",
							lv_flashingcolor_19_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		(
			otherlv_20='FinalSentence:'
			{
				newLeafNode(otherlv_20, grammarAccess.getMissionAccess().getFinalSentenceKeyword_12_0());
			}
			(
				(
					lv_finalsentence_21_0=RULE_STRING
					{
						newLeafNode(lv_finalsentence_21_0, grammarAccess.getMissionAccess().getFinalsentenceSTRINGTerminalRuleCall_12_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMissionRule());
						}
						setWithLastConsumed(
							$current,
							"finalsentence",
							lv_finalsentence_21_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleColors
entryRuleColors returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorsRule()); }
	iv_ruleColors=ruleColors
	{ $current=$iv_ruleColors.current; }
	EOF;

// Rule Colors
ruleColors returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_color_0_0=RULE_STRING
			{
				newLeafNode(lv_color_0_0, grammarAccess.getColorsAccess().getColorSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getColorsRule());
				}
				setWithLastConsumed(
					$current,
					"color",
					lv_color_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleSensors
entryRuleSensors returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorsRule()); }
	iv_ruleSensors=ruleSensors
	{ $current=$iv_ruleSensors.current; }
	EOF;

// Rule Sensors
ruleSensors returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_sensor_0_0=RULE_STRING
			{
				newLeafNode(lv_sensor_0_0, grammarAccess.getSensorsAccess().getSensorSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSensorsRule());
				}
				setWithLastConsumed(
					$current,
					"sensor",
					lv_sensor_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Rule MissionType
ruleMissionType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='AvoidColors'
			{
				$current = grammarAccess.getMissionTypeAccess().getAvoidColorsEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMissionTypeAccess().getAvoidColorsEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='FindColors'
			{
				$current = grammarAccess.getMissionTypeAccess().getFindColorsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMissionTypeAccess().getFindColorsEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
