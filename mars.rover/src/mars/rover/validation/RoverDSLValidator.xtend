/*
 * generated by Xtext 2.23.0
 */
package mars.rover.validation

import org.eclipse.xtext.validation.Check
import mars.rover.roverDSL.MissionType
import mars.rover.roverDSL.Mission
import mars.rover.roverDSL.Colors
import mars.rover.roverDSL.Sensors

/** 
 * This class contains custom validation rules. 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class RoverDSLValidator extends AbstractRoverDSLValidator { //	public static final String INVALID_NAME = "invalidName";
	
	@Check
	def checkMissionType(MissionType missionType) {
		//possible check
	}
	
	@Check
	def checkSafety(Mission mission) {
		if (mission.safetyproperty !='Off' && mission.safetyproperty !='On') {
			error("Safety should be either 'On' or 'Off'.",null)
		}
	}
	
	@Check
	def checkBeginSentence(Mission mission) {
		//possible check
	}
	
	@Check
	def checkOuterBorder(Mission mission) {
		switch(mission.border) {
			case 'White': null
			case 'Red': 
				warning("Are you sure this is the color of the border?", null)
			case 'Yellow': 
				warning("Are you sure this is the color of the border?", null)
			case 'Blue': 
				warning("Are you sure this is the color of the border?", null)
			case 'Black': 
				warning("Are you sure this is the color of the border?", null)
			default:
				error("Please give a viable color ('White', 'Red', 'Yellow', 'Blue' or 'Black').",null)
		}
	}
	
	@Check
	def checkForwardSpeed(Mission mission) {
		//possible check
	}
	
	@Check
	def checkReverseSpeed(Mission mission) {
		//possible check
	}
	
	@Check
	def checkTurnDirection(Mission mission) {
		//possible check
	}
	
	@Check
	def checkColors(Mission mission) {
		//possible check
	}
	
	@Check
	def checkColor(Colors color) {
		//possible check
	}
	
	@Check
	def checkSensors(Mission mission) {
		//possible check
	}
	
	@Check
	def checkSensor(Sensors sensor) {
		//possible check
	}
	
	@Check
	def checkEnd(Mission mission) {
		//possible check
	}
	
	@Check
	def checkFlashingColor(Mission mission) {
		//possible check
	}
	
	@Check
	def checkFinalSentence(Mission mission) {
		//possible check
	}
}
